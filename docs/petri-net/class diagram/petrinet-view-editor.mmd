classDiagram
    direction TB

    class Pane {
        <<JavaFX>>
    }

    class AbstractPetriNetPane {
        <<Abstract>>
        #SmartGraphPanel~Node, String~ graphView
        #DigraphEdgeList~Node, String~ g
        #bool isInteractionEnabled
        +init() void
        #onVertexSingleClickAction(SmartGraphVertex) void
        #onEdgeSingleClickAction(SmartGraphEdge) void
        #onCanvasSingleClickAction(Point2D) void
        #onVertexRightClickAction(SmartGraphVertex) void
    }

    class PetriNetEditorPane {
        -MODE currentMode
        -NODE_TYPE currentNodeType
        -PetriNetBuilder petriNetBuilder
        -areCompatible(Node, Node)
        +setCurrentMode(MODE) void
        +saveNetAction(String, String) void
        +setOnPetriNetSaved(Consumer~String~)
        #onEdgeSingleClickAction(SmartGraphEdge) void
        #onCanvasSingleClickAction(Point2D) void
        #onVertexSingleClickAction(SmartGraphVertex) void
        #onVertexRightClickAction(SmartGraphVertex) void
    }

    class PetriNetViewerPane {
        -PetriNetModel petriNetModel
        -Computation computation
        -TriConsumer onTransitionFired
        -fireTransition(Transition, Vertex) void
        +setComputation(Computation) void
        +setOnTransitionFired(TriConsume)
        +setOnPetriNetFinished(Runnable)
        #onVertexSingleClickAction(SmartGraphVertex) void
    }

    class Computation {
        -NEXT_STEP_TYPE nextStepType
        -String netId
        -String creatorId
        -String userId
        -long startTimestamp
        -long endTimestamp
        -SortedSet~ComputationSteps~ steps
        +addStep(ComputationStep) boolean
        +removeStep(ComputationStep) boolean
        +clearSteps() void
        +getSteps() SortedSet~ComputationSteps~
        +getLastStep() ComputationStep
    }

    class ComputationStep {
        -long id
        -String markingState
        -String transitionName
        -long timestamp
    }

    class TriConsumer~T, U, V~ {
<<functional interface>>
+accept(t: T, u: U, v: V)
}

class MODE {
<<enumeration>>
CREATE
CONNECT
SELECTION
DELETION
}
class NODE_TYPE {
<<enumeration>>
PLACE
TRANSITION
}

class NEXT_STEP_TYPE {
<<enumeration>>
NONE
USER
ADMIN
BOTH
}
AbstractPetriNetPane --|> Pane

PetriNetViewerPane ..> TriConsumer : uses

AbstractPetriNetPane <|-- PetriNetEditorPane
AbstractPetriNetPane <|-- PetriNetViewerPane

PetriNetEditorPane ..> PetriNetBuilder : uses
PetriNetEditorPane ..> Node : uses
PetriNetViewerPane ..> Node : uses
PetriNetViewerPane -- MODE
PetriNetViewerPane -- NODE_TYPE

PetriNetViewerPane ..> PNMLParser : uses
PetriNetEditorPane ..> PNMLSerializer : uses

PetriNetViewerPane "1" o-- "1" PetriNetModel
PetriNetViewerPane "1" o-- "1" Computation
ComputationStep "1..*" *-- "1" Computation
Computation -- NEXT_STEP_TYPE

