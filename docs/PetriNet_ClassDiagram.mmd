classDiagram
    class PetriNetModel {
        - String name
        - Map~Node, List~Node~ adjacencyList
        + PetriNetModel()
        + PetriNetModel(String name, List~Place~ places, List~Transition~ transitions, List~Arc~ arcs, Place startNode, Place finishNode)
        + String getName()
        + void addNode(Node node)
        + void addArc(Node from, Node to) throws IllegalConnectionException
        + void addArc(String from, String to) throws IllegalConnectionException
        + List~Node~ getSuccessors(Node node)
        + Set~Node~ getNodes()
        + Map~Node, List~Node~~ getConnections()
        + Node getNodeByName(String name)
        - boolean areCompatible(Node from, Node to)
    }

    class PetriNetBuilder {
        - List~Place~ places
        - List~Transition~ transitions
        - List~Arc~ arcs
        - Place startNode
        - Place finishNode
        - String petriName
        + PetriNetBuilder(String petriNetName)
        + PlaceBuilder newPlace(String name)
        + TransitionBuilder newTransition(String name)
        + PetriNetBuilder addArc(String from, String to)
        + PetriNetBuilder setFinishNode(String name)
        + PetriNetBuilder setStartNode(String name)
        + PetriNetModel build() throws IllegalConnectionException
    }

    class PlaceBuilder {
        - PetriNetBuilder petriNetBuilder
        - Place place
        + PlaceBuilder(PetriNetBuilder petriNetBuilder, String name)
        + PlaceBuilder initialMarking(int count)
        + PlaceBuilder withType(PLACE_TYPE type)
        + PlaceBuilder withPosition(double x, double y)
        + PetriNetBuilder donePlace()
    }

    class TransitionBuilder {
        - PetriNetBuilder petriNetBuilder
        - Transition transition
        + TransitionBuilder(PetriNetBuilder petriNetBuilder, String name)
        + TransitionBuilder withType(TRANSITION_TYPE type)
        + TransitionBuilder withPosition(double x, double y)
        + PetriNetBuilder doneTransition()
    }

    class Node {
        <<abstract>>
        + String getName()
    }

    class Place {
        + void setPlaceTokens(int count)
        + void setType(PLACE_TYPE type)
        + void setPosition(Point2D position)
    }

    class Transition {
        + void setType(TRANSITION_TYPE type)
        + void setPosition(Point2D position)
    }

    class Arc {
        + Arc(String from, String to)
        + Node getFrom()
        + Node getTo()
    }

    class IllegalConnectionException {
        + IllegalConnectionException(String message)
    }

    class PLACE_TYPE {
        <<enumeration>>
        START
        END
        NORMAL
    }

    class TRANSITION_TYPE {
        <<enumeration>>
        // Define transition types here
    }

    class Point2D {
        + Point2D(double x, double y)
    }

    PetriNetBuilder --> PetriNetModel
    PetriNetBuilder --> PlaceBuilder
    PetriNetBuilder --> TransitionBuilder
    PlaceBuilder --> Place
    TransitionBuilder --> Transition
    PetriNetModel --> Node
    Node <|-- Place
    Node <|-- Transition
    Arc --> Node
    Place --> PLACE_TYPE
    Transition --> TRANSITION_TYPE
    Place --> Point2D
    Transition --> Point2D