classDiagram
    direction LR

    class Pane {
        <<JavaFX>>
    }

    class AbstractPetriNetPane {
        <<abstract>>
        # SmartGraphPanel~Node, String~ graphView
        # Graph~Node, String~ g
        # ContentZoomScrollPane contentZoomScrollPane
        + zoomInAction()
        + zoomOutAction()
        + loadPetriNet(PetriNetModel model)
        # abstract void setupInteractions()
        # addNodeToGraph(Node node) : Vertex
        # removeNodeFromGraph(Vertex~Node~ v)
        # addArcToGraph(Vertex~Node~ from, Vertex~Node~ to)
    }

    class PetriNetViewerPane {
        + PetriNetViewerPane(PetriNetModel model)
        + PetriNetViewerPane(PetriNetModel model, Computation computation)
        # setupInteractions()
        + showNodeProperties(Vertex~Node~ v)
        + addComputatioToNet(Computation computation)
        - initFirableTransition()
    }

    class PetriNetEditorPane {
        - MODE currentMode
        - NODE_TYPE currentNodeType
        - PetriNetBuilder petriNetBuilder
        - Vertex~Node~ firstSelectedVertex
        + setCurrentMode(MODE mode)
        + saveNetAction()
        # setupInteractions()
    }

    class PetriNetBuilder {
        + build() PetriNetModel
        + addArc(from, to)
        + newTransition(label)
        + newPlace(label)
    }

    class Node {
        <<interface>>
        String name
        Point2D position
    }
    class Place {
        +Place(String name, Point2D pos)
    }
    class Transition {
        +Transition(String name, Point2D pos)
    }

    Pane <|-- AbstractPetriNetPane
    AbstractPetriNetPane <|-- PetriNetViewerPane
    AbstractPetriNetPane <|-- PetriNetEditorPane

    PetriNetEditorPane o-- MODE
    PetriNetEditorPane o-- NODE_TYPE
    PetriNetEditorPane ..> PetriNetBuilder : uses

    AbstractPetriNetPane o-- SmartGraphPanel : contains
    AbstractPetriNetPane ..> Node : manages graph of

    Node <|.. Place
    Node <|.. Transition

    %% Enums for context %%
    class MODE {
        <<enumeration>>
        CREATE
        CONNECT
        SELECTION
        DELETION
    }
    class NODE_TYPE {
        <<enumeration>>
        PLACE
        TRANSITION
    }